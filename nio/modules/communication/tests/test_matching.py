from nio.modules.communication.matching import matches
from nio.testing.test_case import NIOTestCase


class TestMatching(NIOTestCase):

    def test_matching(self):
        """ Asserts matching algorithm
        """

        self.assertTrue(matches("A", "A"))
        self.assertFalse(matches("A", "A.1"))
        self.assertFalse(matches("A", "A.1.a"))
        self.assertFalse(matches("A", "A.2"))
        self.assertFalse(matches("A", "A.2.a"))
        self.assertFalse(matches("A", "A.2.b"))
        self.assertFalse(matches("A", "B"))
        self.assertFalse(matches("A", "B.a"))
        self.assertFalse(matches("A", "B.1"))
        self.assertFalse(matches("A", "B.1.a"))
        self.assertFalse(matches("A", "B.1.b"))

        self.assertFalse(matches("A.*", "A"))
        self.assertTrue(matches("A.*", "A.1"))
        self.assertFalse(matches("A.*", "A.1.a"))
        self.assertTrue(matches("A.*", "A.2"))
        self.assertFalse(matches("A.*", "A.2.a"))
        self.assertFalse(matches("A.*", "A.2.b"))
        self.assertFalse(matches("A.*", "B"))
        self.assertFalse(matches("A.*", "B.a"))
        self.assertFalse(matches("A.*", "B.1"))
        self.assertFalse(matches("A.*", "B.1.a"))
        self.assertFalse(matches("A.*", "B.1.b"))

        self.assertFalse(matches("A.1", "A"))
        self.assertTrue(matches("A.1", "A.1"))
        self.assertFalse(matches("A.1", "A.1.a"))
        self.assertFalse(matches("A.1", "A.2"))
        self.assertFalse(matches("A.1", "A.2.a"))
        self.assertFalse(matches("A.1", "A.2.b"))
        self.assertFalse(matches("A.1", "B"))
        self.assertFalse(matches("A.1", "B.a"))
        self.assertFalse(matches("A.1", "B.1"))
        self.assertFalse(matches("A.1", "B.1.a"))
        self.assertFalse(matches("A.1", "B.1.b"))

        self.assertFalse(matches("A.1.*", "A"))
        self.assertFalse(matches("A.1.*", "A.1"))
        self.assertTrue(matches("A.1.*", "A.1.a"))
        self.assertFalse(matches("A.1.*", "A.2"))
        self.assertFalse(matches("A.1.*", "A.2.a"))
        self.assertFalse(matches("A.1.*", "A.2.b"))
        self.assertFalse(matches("A.1.*", "B"))
        self.assertFalse(matches("A.1.*", "B.a"))
        self.assertFalse(matches("A.1.*", "B.1"))
        self.assertFalse(matches("A.1.*", "B.1.a"))
        self.assertFalse(matches("A.1.*", "B.1.b"))

        self.assertFalse(matches("A.1.a", "A"))
        self.assertFalse(matches("A.1.a", "A.1"))
        self.assertTrue(matches("A.1.a", "A.1.a"))
        self.assertFalse(matches("A.1.a", "A.2"))
        self.assertFalse(matches("A.1.a", "A.2.a"))
        self.assertFalse(matches("A.1.a", "A.2.b"))
        self.assertFalse(matches("A.1.a", "B"))
        self.assertFalse(matches("A.1.a", "B.a"))
        self.assertFalse(matches("A.1.a", "B.1"))
        self.assertFalse(matches("A.1.a", "B.1.a"))
        self.assertFalse(matches("A.1.a", "B.1.b"))

        self.assertFalse(matches("A.1.**", "A"))
        self.assertTrue(matches("A.1.**", "A.1"))
        self.assertTrue(matches("A.1.**", "A.1.a"))
        self.assertFalse(matches("A.1.**", "A.2"))
        self.assertFalse(matches("A.1.**", "A.2.a"))
        self.assertFalse(matches("A.1.**", "A.2.b"))
        self.assertFalse(matches("A.1.**", "B"))
        self.assertFalse(matches("A.1.**", "B.a"))
        self.assertFalse(matches("A.1.**", "B.1"))
        self.assertFalse(matches("A.1.**", "B.1.a"))
        self.assertFalse(matches("A.1.**", "B.1.b"))

        self.assertTrue(matches("A.**", "A"))
        self.assertTrue(matches("A.**", "A.1"))
        self.assertTrue(matches("A.**", "A.1.a"))
        self.assertTrue(matches("A.**", "A.2"))
        self.assertTrue(matches("A.**", "A.2.a"))
        self.assertTrue(matches("A.**", "A.2.b"))
        self.assertFalse(matches("A.**", "B"))
        self.assertFalse(matches("A.**", "B.a"))
        self.assertFalse(matches("A.**", "B.1"))
        self.assertFalse(matches("A.**", "B.1.a"))
        self.assertFalse(matches("A.**", "B.1.b"))

        self.assertFalse(matches("A.*.**", "A"))
        self.assertTrue(matches("A.*.**", "A.1"))
        self.assertTrue(matches("A.*.**", "A.1.a"))
        self.assertTrue(matches("A.*.**", "A.2"))
        self.assertTrue(matches("A.*.**", "A.2.a"))
        self.assertTrue(matches("A.*.**", "A.2.b"))
        self.assertFalse(matches("A.*.**", "B"))
        self.assertFalse(matches("A.*.**", "B.a"))
        self.assertFalse(matches("A.*.**", "B.1"))
        self.assertFalse(matches("A.*.**", "B.1.a"))
        self.assertFalse(matches("A.*.**", "B.1.b"))

        self.assertFalse(matches("A.*.a", "A"))
        self.assertFalse(matches("A.*.a", "A.1"))
        self.assertTrue(matches("A.*.a", "A.1.a"))
        self.assertFalse(matches("A.*.a", "A.2"))
        self.assertTrue(matches("A.*.a", "A.2.a"))
        self.assertFalse(matches("A.*.a", "A.2.b"))
        self.assertFalse(matches("A.*.a", "B"))
        self.assertFalse(matches("A.*.a", "B.a"))
        self.assertFalse(matches("A.*.a", "B.1"))
        self.assertFalse(matches("A.*.a", "B.1.a"))
        self.assertFalse(matches("A.*.a", "B.1.b"))

        self.assertFalse(matches("A.**.a", "A"))
        self.assertFalse(matches("A.**.a", "A.1"))
        self.assertTrue(matches("A.**.a", "A.1.a"))
        self.assertFalse(matches("A.**.a", "A.2"))
        self.assertTrue(matches("A.**.a", "A.2.a"))
        self.assertFalse(matches("A.**.a", "A.2.b"))
        self.assertFalse(matches("A.**.a", "B"))
        self.assertFalse(matches("A.**.a", "B.a"))
        self.assertFalse(matches("A.**.a", "B.1"))
        self.assertFalse(matches("A.**.a", "B.1.a"))
        self.assertFalse(matches("A.**.a", "B.1.b"))

        self.assertFalse(matches("B.*.a", "A"))
        self.assertFalse(matches("B.*.a", "A.1"))
        self.assertFalse(matches("B.*.a", "A.1.a"))
        self.assertFalse(matches("B.*.a", "A.2"))
        self.assertFalse(matches("B.*.a", "A.2.a"))
        self.assertFalse(matches("B.*.a", "A.2.b"))
        self.assertFalse(matches("B.*.a", "B"))
        self.assertFalse(matches("B.*.a", "B.a"))
        self.assertFalse(matches("B.*.a", "B.1"))
        self.assertTrue(matches("B.*.a", "B.1.a"))
        self.assertFalse(matches("B.*.a", "B.1.b"))

        self.assertFalse(matches("B.**.a", "A"))
        self.assertFalse(matches("B.**.a", "A.1"))
        self.assertFalse(matches("B.**.a", "A.1.a"))
        self.assertFalse(matches("B.**.a", "A.2"))
        self.assertFalse(matches("B.**.a", "A.2.a"))
        self.assertFalse(matches("B.**.a", "A.2.b"))
        self.assertFalse(matches("B.**.a", "B"))
        self.assertTrue(matches("B.**.a", "B.a"))
        self.assertFalse(matches("B.**.a", "B.1"))
        self.assertTrue(matches("B.**.a", "B.1.a"))
        self.assertFalse(matches("B.**.a", "B.1.b"))

        self.assertFalse(matches("*.a", "A"))
        self.assertFalse(matches("*.a", "A.1"))
        self.assertFalse(matches("*.a", "A.1.a"))
        self.assertFalse(matches("*.a", "A.2"))
        self.assertFalse(matches("*.a", "A.2.a"))
        self.assertFalse(matches("*.a", "A.2.b"))
        self.assertFalse(matches("*.a", "B"))
        self.assertTrue(matches("*.a", "B.a"))
        self.assertFalse(matches("*.a", "B.1"))
        self.assertFalse(matches("*.a", "B.1.a"))
        self.assertFalse(matches("*.a", "B.1.b"))

        self.assertFalse(matches("**.a", "A"))
        self.assertFalse(matches("**.a", "A.1"))
        self.assertTrue(matches("**.a", "A.1.a"))
        self.assertFalse(matches("**.a", "A.2"))
        self.assertTrue(matches("**.a", "A.2.a"))
        self.assertFalse(matches("**.a", "A.2.b"))
        self.assertFalse(matches("**.a", "B"))
        self.assertTrue(matches("**.a", "B.a"))
        self.assertFalse(matches("**.a", "B.1"))
        self.assertTrue(matches("**.a", "B.1.a"))
        self.assertFalse(matches("**.a", "B.1.b"))

        self.assertFalse(matches("*.1", "A"))
        self.assertTrue(matches("*.1", "A.1"))
        self.assertFalse(matches("*.1", "A.1.a"))
        self.assertFalse(matches("*.1", "A.2"))
        self.assertFalse(matches("*.1", "A.2.a"))
        self.assertFalse(matches("*.1", "A.2.b"))
        self.assertFalse(matches("*.1", "B"))
        self.assertFalse(matches("*.1", "B.a"))
        self.assertTrue(matches("*.1", "B.1"))
        self.assertFalse(matches("*.1", "B.1.a"))
        self.assertFalse(matches("*.1", "B.1.b"))

        self.assertFalse(matches("*.1.*", "A"))
        self.assertFalse(matches("*.1.*", "A.1"))
        self.assertTrue(matches("*.1.*", "A.1.a"))
        self.assertFalse(matches("*.1.*", "A.2"))
        self.assertFalse(matches("*.1.*", "A.2.a"))
        self.assertFalse(matches("*.1.*", "A.2.b"))
        self.assertFalse(matches("*.1.*", "B"))
        self.assertFalse(matches("*.1.*", "B.a"))
        self.assertFalse(matches("*.1.*", "B.1"))
        self.assertTrue(matches("*.1.*", "B.1.a"))
        self.assertTrue(matches("*.1.*", "B.1.b"))

        self.assertFalse(matches("*.1.**", "A"))
        self.assertTrue(matches("*.1.**", "A.1"))
        self.assertTrue(matches("*.1.**", "A.1.a"))
        self.assertFalse(matches("*.1.**", "A.2"))
        self.assertFalse(matches("*.1.**", "A.2.a"))
        self.assertFalse(matches("*.1.**", "A.2.b"))
        self.assertFalse(matches("*.1.**", "B"))
        self.assertFalse(matches("*.1.**", "B.a"))
        self.assertTrue(matches("*.1.**", "B.1"))
        self.assertTrue(matches("*.1.**", "B.1.a"))
        self.assertTrue(matches("*.1.**", "B.1.b"))

        self.assertTrue(matches("*", "A"))
        self.assertFalse(matches("*", "A.1"))
        self.assertFalse(matches("*", "A.1.a"))
        self.assertFalse(matches("*", "A.2"))
        self.assertFalse(matches("*", "A.2.a"))
        self.assertFalse(matches("*", "A.2.b"))
        self.assertTrue(matches("*", "B"))
        self.assertFalse(matches("*", "B.a"))
        self.assertFalse(matches("*", "B.1"))
        self.assertFalse(matches("*", "B.1.a"))
        self.assertFalse(matches("*", "B.1.b"))

        self.assertTrue(matches("*.**", "A"))
        self.assertTrue(matches("*.**", "A.1"))
        self.assertTrue(matches("*.**", "A.1.a"))
        self.assertTrue(matches("*.**", "A.2"))
        self.assertTrue(matches("*.**", "A.2.a"))
        self.assertTrue(matches("*.**", "A.2.b"))
        self.assertTrue(matches("*.**", "B"))
        self.assertTrue(matches("*.**", "B.a"))
        self.assertTrue(matches("*.**", "B.1"))
        self.assertTrue(matches("*.**", "B.1.a"))
        self.assertTrue(matches("*.**", "B.1.b"))

        self.assertTrue(matches("**", "A"))
        self.assertTrue(matches("**", "A.1"))
        self.assertTrue(matches("**", "A.1.a"))
        self.assertTrue(matches("**", "A.2"))
        self.assertTrue(matches("**", "A.2.a"))
        self.assertTrue(matches("**", "A.2.b"))
        self.assertTrue(matches("**", "B"))
        self.assertTrue(matches("**", "B.a"))
        self.assertTrue(matches("**", "B.1"))
        self.assertTrue(matches("**", "B.1.a"))
        self.assertTrue(matches("**", "B.1.b"))

        self.assertTrue(matches("**.**", "A"))
        self.assertTrue(matches("**.**", "A.1"))
        self.assertTrue(matches("**.**", "A.1.a"))
        self.assertTrue(matches("**.**", "A.2"))
        self.assertTrue(matches("**.**", "A.2.a"))
        self.assertTrue(matches("**.**", "A.2.b"))
        self.assertTrue(matches("**.**", "B"))
        self.assertTrue(matches("**.**", "B.a"))
        self.assertTrue(matches("**.**", "B.1"))
        self.assertTrue(matches("**.**", "B.1.a"))
        self.assertTrue(matches("**.**", "B.1.b"))

        self.assertTrue(matches("**.*", "A"))
        self.assertTrue(matches("**.*", "A.1"))
        self.assertTrue(matches("**.*", "A.1.a"))
        self.assertTrue(matches("**.*", "A.2"))
        self.assertTrue(matches("**.*", "A.2.a"))
        self.assertTrue(matches("**.*", "A.2.b"))
        self.assertTrue(matches("**.*", "B"))
        self.assertTrue(matches("**.*", "B.a"))
        self.assertTrue(matches("**.*", "B.1"))
        self.assertTrue(matches("**.*", "B.1.a"))
        self.assertTrue(matches("**.*", "B.1.b"))

        self.assertFalse(matches("*.*.**", "A"))
        self.assertTrue(matches("*.*.**", "A.1"))
        self.assertTrue(matches("*.*.**", "A.1.a"))
        self.assertTrue(matches("*.*.**", "A.2"))
        self.assertTrue(matches("*.*.**", "A.2.a"))
        self.assertTrue(matches("*.*.**", "A.2.b"))
        self.assertFalse(matches("*.*.**", "B"))
        self.assertTrue(matches("*.*.**", "B.a"))
        self.assertTrue(matches("*.*.**", "B.1"))
        self.assertTrue(matches("*.*.**", "B.1.a"))
        self.assertTrue(matches("*.*.**", "B.1.b"))

    def test_additional_matches(self):

        self.assertFalse(matches("a.b", "a.b.c"))
        # asserting several level wildcards
        self.assertTrue(matches("*.*.c.*", "a.b.c.d"))
        self.assertTrue(matches("*.*.c.d", "a.b.c.d"))
        self.assertTrue(matches("*.*.c.d.*", "a.b.c.d.e"))

        self.assertFalse(matches('a.**.*', 'a'))
        self.assertTrue(matches('a.**.*', 'a.b'))
        self.assertTrue(matches('a.**.*', 'a.b.c'))
        self.assertTrue(matches('a.**.**', 'a'))
        self.assertTrue(matches('a.**.**', 'a.b'))
        self.assertTrue(matches('a.**.**', 'a.b.c'))

        self.assertFalse(matches("root.node1", "root.node2"))
        self.assertFalse(matches("root1.node1", "root.node1"))
        self.assertTrue(matches("*.*", "root.node1"))

        # asserting that spaces are not trimmed
        self.assertFalse(matches('  a', 'a   '))
        self.assertFalse(matches('  a', 'a'))
        self.assertFalse(matches('a  ', 'a'))
        self.assertFalse(matches('   a   ', 'a'))
        # not a match, spaces inside topic are just another character
        self.assertFalse(matches('a.  b  ', 'a.b'))

        # assert that spaces are matched (no recommended though)
        self.assertTrue(matches('a   ', 'a   '))
        self.assertTrue(matches('a   .b', 'a   .b'))
        self.assertTrue(matches('  a   .b', '  a   .b'))
        self.assertTrue(matches('  a   .b  ', '  a   .b  '))

        # asserting that when '*' is surrounded by other characters it has
        # no special meaning
        self.assertTrue(matches("a*.c", "a*.c"))
        self.assertFalse(matches("a*.c", "ab.c"))
        self.assertTrue(matches("*b.c", "*b.c"))
        self.assertFalse(matches("*b.c", "ab.c"))

        # adapting old matching table to new matching
        self.assertTrue(matches("a", "a"))
        self.assertFalse(matches("a", "a.b1"))
        self.assertFalse(matches("a", "a.b1.c1"))
        self.assertFalse(matches("a", "a.b1.c1.end"))
        self.assertFalse(matches("a", "a.b1.end"))
        self.assertFalse(matches("a", "a.b2"))
        self.assertFalse(matches("a", "a.b2.end"))
        self.assertFalse(matches("a", "a2"))
        self.assertFalse(matches("a", "a2.end"))

        self.assertFalse(matches("a.b1", "a"))
        self.assertTrue(matches("a.b1", "a.b1"))
        self.assertFalse(matches("a.b1", "a.b1.c1"))
        self.assertFalse(matches("a.b1", "a.b1.c1.end"))
        self.assertFalse(matches("a.b1", "a.b1.end"))
        self.assertFalse(matches("a.b1", "a.b2"))
        self.assertFalse(matches("a.b1", "a.b2.end"))
        self.assertFalse(matches("a.b1", "a2"))
        self.assertFalse(matches("a.b1", "a2.end"))

        self.assertFalse(matches("a.b1.c1", "a"))
        self.assertFalse(matches("a.b1.c1", "a.b1"))
        self.assertTrue(matches("a.b1.c1", "a.b1.c1"))
        self.assertFalse(matches("a.b1.c1", "a.b1.c1.end"))
        self.assertFalse(matches("a.b1.c1", "a.b1.end"))
        self.assertFalse(matches("a.b1.c1", "a.b2"))
        self.assertFalse(matches("a.b1.c1", "a.b2.end"))
        self.assertFalse(matches("a.b1.c1", "a2"))
        self.assertFalse(matches("a.b1.c1", "a2.end"))

        self.assertFalse(matches("a.b1.c1.end", "a"))
        self.assertFalse(matches("a.b1.c1.end", "a.b1"))
        self.assertFalse(matches("a.b1.c1.end", "a.b1.c1"))
        self.assertTrue(matches("a.b1.c1.end", "a.b1.c1.end"))
        self.assertFalse(matches("a.b1.c1.end", "a.b1.end"))
        self.assertFalse(matches("a.b1.c1.end", "a.b2"))
        self.assertFalse(matches("a.b1.c1.end", "a.b2.end"))
        self.assertFalse(matches("a.b1.c1.end", "a2"))
        self.assertFalse(matches("a.b1.c1.end", "a2.end"))

        self.assertFalse(matches("a.b2", "a"))
        self.assertFalse(matches("a.b2", "a.b1"))
        self.assertFalse(matches("a.b2", "a.b1.c1"))
        self.assertFalse(matches("a.b2", "a.b1.c1.end"))
        self.assertFalse(matches("a.b2", "a.b1.end"))
        self.assertTrue(matches("a.b2", "a.b2"))
        self.assertFalse(matches("a.b2", "a.b2.end"))
        self.assertFalse(matches("a.b2", "a2"))
        self.assertFalse(matches("a.b2", "a2.end"))

        self.assertFalse(matches("a.end", "a"))
        self.assertFalse(matches("a.end", "a.b1"))
        self.assertFalse(matches("a.end", "a.b1.c1"))
        self.assertFalse(matches("a.end", "a.b1.c1.end"))
        self.assertFalse(matches("a.end", "a.b1.end"))
        self.assertFalse(matches("a.end", "a.b2"))
        self.assertFalse(matches("a.end", "a.b2.end"))
        self.assertFalse(matches("a.end", "a2"))
        self.assertFalse(matches("a.end", "a2.end"))

        self.assertFalse(matches("*.end", "a"))
        self.assertFalse(matches("*.end", "a.b1"))
        self.assertFalse(matches("*.end", "a.b1.c1"))
        self.assertFalse(matches("*.end", "a.b1.c1.end"))
        self.assertFalse(matches("*.end", "a.b1.end"))
        self.assertFalse(matches("*.end", "a.b2"))
        self.assertFalse(matches("*.end", "a.b2.end"))
        self.assertFalse(matches("*.end", "a2"))
        self.assertTrue(matches("*.end", "a2.end"))

        self.assertFalse(matches("**.end", "a"))
        self.assertFalse(matches("**.end", "a.b1"))
        self.assertFalse(matches("**.end", "a.b1.c1"))
        self.assertTrue(matches("**.end", "a.b1.c1.end"))
        self.assertTrue(matches("**.end", "a.b1.end"))
        self.assertFalse(matches("**.end", "a.b2"))
        self.assertTrue(matches("**.end", "a.b2.end"))
        self.assertFalse(matches("**.end", "a2"))
        self.assertTrue(matches("**.end", "a2.end"))

        self.assertFalse(matches("a.*.end", "a"))
        self.assertFalse(matches("a.*.end", "a.b1"))
        self.assertFalse(matches("a.*.end", "a.b1.c1"))
        self.assertFalse(matches("a.*.end", "a.b1.c1.end"))
        self.assertTrue(matches("a.*.end", "a.b1.end"))
        self.assertFalse(matches("a.*.end", "a.b2"))
        self.assertTrue(matches("a.*.end", "a.b2.end"))
        self.assertFalse(matches("a.*.end", "a2"))
        self.assertFalse(matches("a.*.end", "a2.end"))

        self.assertFalse(matches("a.**.end", "a"))
        self.assertFalse(matches("a.**.end", "a.b1"))
        self.assertFalse(matches("a.**.end", "a.b1.c1"))
        self.assertTrue(matches("a.**.end", "a.b1.c1.end"))
        self.assertTrue(matches("a.**.end", "a.b1.end"))
        self.assertFalse(matches("a.**.end", "a.b2"))
        self.assertTrue(matches("a.**.end", "a.b2.end"))
        self.assertFalse(matches("a.**.end", "a2"))
        self.assertFalse(matches("a.**.end", "a2.end"))

        self.assertFalse(matches("a.*.*.end", "a"))
        self.assertFalse(matches("a.*.*.end", "a.b1"))
        self.assertFalse(matches("a.*.*.end", "a.b1.c1"))
        self.assertTrue(matches("a.*.*.end", "a.b1.c1.end"))
        self.assertFalse(matches("a.*.*.end", "a.b1.end"))
        self.assertFalse(matches("a.*.*.end", "a.b2"))
        self.assertFalse(matches("a.*.*.end", "a.b2.end"))
        self.assertFalse(matches("a.*.*.end", "a2"))
        self.assertFalse(matches("a.*.*.end", "a2.end"))

        # more prefix mismatches
        self.assertFalse(matches("ab", "a"))
        self.assertFalse(matches("ab", "a.b1"))
        self.assertFalse(matches("ab", "a.b1.c1"))
        self.assertFalse(matches("ab", "a.b1.c1.end"))
        self.assertFalse(matches("ab", "a.b1.end"))
        self.assertFalse(matches("ab", "a.b2"))
        self.assertFalse(matches("ab", "a.b2.end"))
        self.assertFalse(matches("ab", "a2"))
        self.assertFalse(matches("ab", "a2.end"))

        self.assertFalse(matches("a.*", "a"))
        self.assertTrue(matches("a.*", "a.b1"))
        self.assertFalse(matches("a.*", "a.b1.c1"))
        self.assertFalse(matches("a.*", "a.b1.c1.end"))
        self.assertFalse(matches("a.*", "a.b1.end"))
        self.assertTrue(matches("a.*", "a.b2"))
        self.assertFalse(matches("a.*", "a.b2.end"))
        self.assertFalse(matches("a.*", "a2"))
        self.assertFalse(matches("a.*", "a2.end"))

        self.assertTrue(matches("a.**", "a"))
        self.assertTrue(matches("a.**", "a.b1"))
        self.assertTrue(matches("a.**", "a.b1.c1"))
        self.assertTrue(matches("a.**", "a.b1.c1.end"))
        self.assertTrue(matches("a.**", "a.b1.end"))
        self.assertTrue(matches("a.**", "a.b2"))
        self.assertTrue(matches("a.**", "a.b2.end"))
        self.assertFalse(matches("a.**", "a2"))
        self.assertFalse(matches("a.**", "a2.end"))

        self.assertTrue(matches("*", "a"))
        self.assertFalse(matches("*", "a.b1"))
        self.assertFalse(matches("*", "a.b1.c1"))
        self.assertFalse(matches("*", "a.b1.c1.end"))
        self.assertFalse(matches("*", "a.b1.end"))
        self.assertFalse(matches("*", "a.b2"))
        self.assertFalse(matches("*", "a.b2.end"))
        self.assertTrue(matches("*", "a2"))
        self.assertFalse(matches("*", "a2.end"))

        # asserting several level wildcards
        self.assertTrue(matches("*.*.c.*", "a.b.c.d"))
        self.assertFalse(matches("*.*.c.d.*", "a.b.c.d"))
        self.assertTrue(matches("*.*.c.d.*", "a.b.c.d.e"))

